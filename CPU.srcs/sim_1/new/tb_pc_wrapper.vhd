-- Generated by Fintor Jozsef's script.

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;

entity tb_pc_wrapper is
end tb_pc_wrapper;

architecture tb of tb_pc_wrapper is
	component pc_wrapper
		port (
			CE_0	:	in STD_LOGIC;
			CLK_0	:	in STD_LOGIC;
			LOAD_0	:	in STD_LOGIC ;
			L_0	:	in STD_LOGIC_VECTOR ( 15 downto 0 ) ;
			Q_0	:	out STD_LOGIC_VECTOR ( 15 downto 0 ));
	end component;

	 signal CE_0	: STD_LOGIC;
	 signal CLK_0	: STD_LOGIC;
	 signal LOAD_0	: STD_LOGIC;
	 signal L_0	: STD_LOGIC_VECTOR ( 15 downto 0 );
	 signal Q_0	: STD_LOGIC_VECTOR ( 15 downto 0 );

begin

	dut : pc_wrapper
	port map (
			CE_0	 => CE_0,
			CLK_0	 => CLK_0,
			LOAD_0	 => LOAD_0,
			L_0	 => L_0,
			Q_0	 => Q_0);
    
    
	stimuli : process

	begin
		-- Write initialization here.
        CE_0 <= '1';
        CLK_0 <= '0';
        LOAD_0 <= '0';
        wait for 20 ns;
        
		-- Write stimuli here.
        for i in 0 to 10000 loop
            CLK_0 <= ( CLK_0 xor '1');
            wait for 20ns;
        end loop;

		wait;
	end process;

end tb;