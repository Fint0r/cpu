-- Generated by Fintor Jozsef's script.

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity tb_a_register is
end tb_a_register;

architecture tb of tb_a_register is
	component a_register
		port (
			a_in	:	in STD_LOGIC_VECTOR (7 downto 0);
			load	:	in STD_LOGIC;
			clock	:	in STD_LOGIC;
			a_out	:	inout STD_LOGIC_VECTOR (7 downto 0));
	end component;

	 signal a_in	: STD_LOGIC_VECTOR (7 downto 0);
	 signal load	: STD_LOGIC;
	 signal clock	: STD_LOGIC;
	 signal a_out	: STD_LOGIC_VECTOR (7 downto 0);

begin

	dut : a_register
	port map (
			a_in	 => a_in,
			load	 => load,
			clock	 => clock,
			a_out	 => a_out);

	stimuli : process

	begin
		-- Write initialization here.
        load <= '1';
        a_in <= "00000000";
        clock <= '0';
        
        wait for 10ns;
        clock <= '1';
        wait for 10ns;
        load <= '0';
        for i in 0 to 5 loop
            clock <= ( clock xor '1');
            wait for 10ns;
        end loop;
        load <= '0';
        wait for 100ns;
        
		-- Write stimuli here.
        wait for 10ns;
        load <= '1';
        a_in <= "11111111";
        wait for 10ns;
        clock <= '1';
        wait for 10ns;
        
        for i in 0 to 10 loop
            clock <= ( clock xor '1');
            wait for 10ns;
        end loop;
        
        
        wait for 10ns;
        load <= '1';
        a_in <= "00000000";
        wait for 10ns;
        clock <= '1';
        wait for 10ns;
        
        for i in 0 to 10 loop
            clock <= ( clock xor '1');
            wait for 10ns;
        end loop;
		wait;
	end process;

end tb;